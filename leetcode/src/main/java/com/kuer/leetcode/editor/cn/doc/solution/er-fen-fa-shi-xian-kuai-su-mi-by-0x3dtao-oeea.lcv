### 解题思路

***二分法***

执行用时：32 ms, 在所有 Python3 提交中击败了89.30%的用户
内存消耗：14.8 MB, 在所有 Python3 提交中击败了92.78%的用户

### 代码

* python3

```python
class Solution:
    def myPow(self, x: float, n: int) -> float:
        if n < 0:
            return self.myPow(1/x, -n)
        elif n == 0:
            return 1
        elif n == 1:
            return x
     
        if n % 2:
            return x*self.myPow(x*x, n//2)
        else:
            return self.myPow(x*x, n//2)


```

